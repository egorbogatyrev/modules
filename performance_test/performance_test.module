<?php
/**
 * @file
 * This file includes core functions and hooks for MEDS Help module.
 */

// Define the field name which used as an indicator for the profile changes.
define('PERFORMANCE_TEST_TRANSLATE_CONTEXT', 'performance_test');

// Define the amount of iterations.
define('PERFORMANCE_TEST_ITERATIONS', 100);

/**
 * Implements hook_menu().
 */
function performance_test_menu() {
  $categories = performance_test_get_available_categories();
  $default_category = $categories[0]['type_name'];

  $items['admin/performance-center'] = array(
    'title' => 'Performance tests',
    'description' => 'Report Center',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('performance_test_page_callback', $default_category),
    'access arguments' => array('access devel information'),
    'file' => 'performance_test.pages.inc',
  );

  foreach ($categories as $key => $category) {
    $category_name = $category['type_name'];
    $items['admin/performance-center/' . $category_name] = array(
      'title' => drupal_ucfirst($category_name),
      'description' => 'Performance Test Center',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('performance_test_page_callback', $category_name),
      'access arguments' => array('access devel information'),
      'file' => 'performance_test.pages.inc',
      'type' => MENU_LOCAL_TASK,
      'weight' => $key,
    );
  }

  $items['admin/performance-center/' . $default_category]['type'] = MENU_DEFAULT_LOCAL_TASK;

  return $items;
}

/**
 * Implements hook_ctools_plugin_type().
 */
function performance_test_ctools_plugin_type() {
  return array(
    'ptest' => array(
      'cache'   => TRUE,
    ),
  );
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function performance_test_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/" . $plugin;
  }
  if ($module == 'performance_test' && !empty($plugin)) {
    return "plugins/" . $plugin;
  }
}

/**
 * Return meds reports plugins configuration.
 */
function performance_test_get_test_plugins($id = NULL) {
  ctools_include('plugins');
  return ctools_get_plugins('performance_test', 'ptest', $id);
}

/**
 * Provides a set of available reports categories.
 */
function performance_test_get_available_categories() {
  $context = performance_test_get_context();

  return array(
    array(
      'type_name'  => 'theme',
      'page_title' => t('Theme engine Performance', array(), $context),
    ),
    array(
      'type_name'  => 'form',
      'page_title' => t('Form engine Performance', array(), $context),
    ),
  );
}

/**
 * Return default array for any variant.
 */
function performance_test_get_context() {
  return array('context' => PERFORMANCE_TEST_TRANSLATE_CONTEXT);
}

/**
 * Return default array for any variant.
 */
function performance_test_get_default_variant_array($tile, $description) {
  $context = performance_test_get_context();

  $default_title = t('Variant Title', array(), $context);
  $default_desc  = t('Variant Description', array(), $context);

  return array(
    'title' => (!empty($tile)) ? $tile : $default_title,
    'description' => (!empty($description)) ? $description : $default_desc,
    'time' => '',
  );
}

/**
 * Return default array for any variant.
 */
function performance_test_start_timer_for_variant($id) {
  timer_start($id);
}


/**
 * Return default array for any variant.
 */
function performance_test_read_timer_for_variant(& $variant, $id) {
  $suffix = ' ' . t('Sec', array(), performance_test_get_context());
  $variant['time'] = (timer_read($id) / 1000) . $suffix;
}
